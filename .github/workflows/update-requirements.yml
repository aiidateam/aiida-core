name: update-requirements

on:
  repository_dispatch:
    types: [update-requirements-command]

jobs:

  tests:

    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        backend: ['django', 'sqlalchemy']
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.client_payload.head_ref }}
    - uses: CasperWA/postgresql-action@v1.2
      with:
        postgresql version: '10'
        postgresql db: test_${{ matrix.backend }}
        postgresql user: postgres
        postgresql password: ''
        postgresql auth: trust

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        wget -O - "https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc" | sudo apt-key add -
        echo 'deb https://dl.bintray.com/rabbitmq-erlang/debian bionic erlang' | sudo tee -a /etc/apt/sources.list.d/bintray.rabbitmq.list
        echo 'deb https://dl.bintray.com/rabbitmq/debian bionic main' | sudo tee -a /etc/apt/sources.list.d/bintray.rabbitmq.list
        sudo rm -f /etc/apt/sources.list.d/dotnetdev.list /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt update
        sudo apt install postgresql-10 rabbitmq-server graphviz
        sudo systemctl status rabbitmq-server.service

    - run: pip install --upgrade pip

    - name: upgrade setuptools [py35]
      if: matrix.python-version == 3.5
      run: pip install -I setuptools==38.2.0

    - name: Install aiida-core
      run: |
        pip install -e .[atomic_tools,docs,notebook,rest,testing]
        reentry scan

    - name: Setup environment
      env:
        AIIDA_TEST_BACKEND: ${{ matrix.backend }}
      run:
        .github/workflows/setup.sh

    - name: Run test suite
      env:
        AIIDA_TEST_BACKEND: ${{ matrix.backend }}
      run:
        .github/workflows/tests.sh

    - name: Freeze test environment
      run: pip freeze | sed '1d' | tee requirements-py-${{ matrix.python-version }}.txt

    # Add python-version specific requirements file to the requirements.txt artifact.
    # Will be used in the next job to create a PR in case they are different from the current version.
    - uses: actions/upload-artifact@v1
      if: matrix.backend == 'django'  # The requirements are identical between backends.
      with:
        name: requirements.txt
        path: requirements-py-${{ matrix.python-version }}.txt

  update-requirements:

    needs: tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.head_ref }}

      - name: Download requirements.txt files
        uses: actions/download-artifact@v1
        with:
          name: requirements.txt
          path: requirements

      - name: Commit requirements files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add requirements/*
          git commit -m "Update requirements files." -a || echo "Nothing to update."

      - name: Push changes
        uses: ad-m/github-push-action@v0.5.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.client_payload.head_ref }}

      - name: Create Pull Request (since update via push failed)
        if: failure() && github.repository == 'aiidateam/aiida-core'
        uses: peter-evans/create-pull-request@v2
        with:
          commit-message: "Update requirements files."
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Update requirements.txt"
          team-reviewers: dependency-manager
          branch: "dm/update-requirements.txt"
