version: '3.4'

services:

  rabbitmq:
    image: rabbitmq:3.8.3-management
    container_name: aiida-rabbitmq
    environment:
        RABBITMQ_DEFAULT_USER: guest
        RABBITMQ_DEFAULT_PASS: guest
    ports:
      - '5672:5672'
      - '15672:15672'

    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 5
    networks:
      - aiida-rmq

  postgres:
    image: postgres:12
    container_name: aiida-postgres
    ports:
      - '5432:5432'
    networks:
      - aiida-rmq
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_PASSWORD: password
    # volumes:
    #   - db-volume:/var/lib/postgresql/data

  aiida:
    #image: "aiidateam/aiida-core:main"
    image: "aiida-core"
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aiida-core
    user: aiida
    environment:
      DB_HOST: postgresql
      BROKER_HOST: rabbitmq

    #entrypoint: /opt/configure-aiida.sh
    # entrypoint: "" 
    # tty: true
    entrypoint: tail -f /dev/null
    # volumes:
    #   - db-volume:/var/lib/assets
    networks:
      - aiida-rmq
    depends_on:
      - rabbitmq
      - postgres

# volumes:
#   db-volume:

networks:
  aiida-rmq: