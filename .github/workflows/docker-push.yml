name: Download Docker image and its tags from GitHub artifacts, apply them and push the image to container registry

env:
  OWNER: ${{ github.repository_owner }}

on:
  workflow_call:

jobs:
  tag-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [aiida-core-base, aiida-core-with-services, aiida-core-dev]
    defaults:
      run:
        shell: bash
        working-directory: .docker
    permissions:
      packages: read

    steps:
    - name: Checkout Repo ‚ö°Ô∏è
      uses: actions/checkout@v4

    - name: Read build variables
      id: build_vars
      run: |
        vars=$(cat build.json | jq -c '[.variable | to_entries[] | {"key": .key, "value": .value.default}] | from_entries')
        echo "vars=$vars" >> "${GITHUB_OUTPUT}"

    - name: Docker meta üìù
      id: meta
      uses: docker/metadata-action@v4
      env: ${{ fromJson(steps.build_vars.outputs.vars) }}
      with:
        images: |
          name=docker.io/${{ env.OWNER }}/${{ matrix.image }}
        tags: |
          type=edge,enable={{is_default_branch}}
          type=sha,enable=${{ github.ref_type != 'tag' }}
          type=ref,event=pr
          type=match,pattern=v(\d+\.\d+.\d+),group=1
          type=raw,value={{tag}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
          type=raw,value=python-${{ env.PYTHON_VERSION }},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
          type=raw,value=postgresql-${{ env.PGSQL_VERSION }},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
