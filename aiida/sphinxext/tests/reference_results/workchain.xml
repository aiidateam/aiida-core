<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.15.2 -->
<document source="/home/a-dogres/programming/aiida/aiida-core/aiida/sphinxext/tests/workchain_source/index.rst">
    <section ids="sphinx-aiida-demo" names="sphinx-aiida\ demo">
        <title>sphinx-aiida demo</title>
        <paragraph>This is a demo documentation to show off the features of the <literal>sphinx-aiida</literal> extension.</paragraph>
        <compound classes="toctree-wrapper">
        </compound>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature first="False" fullname="WorkChain"><desc_annotation xml:space="preserve">workchain</desc_annotation><desc_addname xml:space="preserve">demo_workchain.</desc_addname><desc_name xml:space="preserve">DemoWorkChain</desc_name></desc_signature>
            <desc_content>
                <paragraph>
                        A demo workchain to show how the workchain auto-documentation works.
                        </paragraph>
                <paragraph><strong>Inputs:</strong><bullet_list bullet="*"><list_item><literal_strong>metadata</literal_strong>, <emphasis>Namespace</emphasis><details opened="False"><summary>Namespace Ports</summary><bullet_list bullet="*"><list_item><literal_strong>call_link_label</literal_strong>, <emphasis>str</emphasis>, optional, <emphasis>non_db</emphasis> – The label to use for the <title_reference>CALL</title_reference> link if the process is called by another process.</list_item><list_item><literal_strong>description</literal_strong>, <emphasis>str</emphasis>, optional, <emphasis>non_db</emphasis> – Description to set on the process node.</list_item><list_item><literal_strong>label</literal_strong>, <emphasis>str</emphasis>, optional, <emphasis>non_db</emphasis> – Label to set on the process node.</list_item><list_item><literal_strong>store_provenance</literal_strong>, <emphasis>bool</emphasis>, optional, <emphasis>non_db</emphasis> – If set to <title_reference>False</title_reference> provenance will not be stored in the database.</list_item></bullet_list></details></list_item><list_item><literal_strong>nsp</literal_strong>, <emphasis>Namespace</emphasis> – A separate namespace, <literal>nsp</literal>.</list_item><list_item><literal_strong>nsp2</literal_strong>, <emphasis>Namespace</emphasis></list_item><list_item><literal_strong>x</literal_strong>, <emphasis>Float</emphasis>, required – First input argument.</list_item><list_item><literal_strong>y</literal_strong>, <emphasis>Namespace</emphasis><details opened="False"><summary>Namespace Ports</summary><bullet_list bullet="*"><list_item><literal_strong>nested</literal_strong>, <emphasis>Namespace</emphasis> – A nested namespace.<details opened="False"><summary>Namespace Ports</summary><bullet_list bullet="*"><list_item><literal_strong>a</literal_strong>, <emphasis>Int</emphasis>, required – An input in the nested namespace.</list_item></bullet_list></details></list_item><list_item><literal_strong>z</literal_strong>, <emphasis>Int</emphasis>, required – Input in a separate namespace.</list_item></bullet_list></details></list_item></bullet_list></paragraph>
                <paragraph><strong>Outputs:</strong><bullet_list bullet="*"><list_item><literal_strong>z</literal_strong>, <emphasis>Bool</emphasis>, required – Output of the demoworkchain.</list_item></bullet_list></paragraph>
                <paragraph><strong>Outline:</strong><literal_block force="False" language="default" linenos="False" xml:space="preserve">start
while(some_check)
    do_something
    if(another_check)
        do_something_else
finalize</literal_block></paragraph>
            </desc_content>
        </desc>
        <paragraph>If you want to hide the inputs that are not stored as nodes in the database, use the <literal>:hide-unstored-inputs:</literal> option.</paragraph>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature first="False" fullname="WorkChain"><desc_annotation xml:space="preserve">workchain</desc_annotation><desc_addname xml:space="preserve">demo_workchain.</desc_addname><desc_name xml:space="preserve">DemoWorkChain</desc_name></desc_signature>
            <desc_content>
                <paragraph>
                        A demo workchain to show how the workchain auto-documentation works.
                        </paragraph>
                <paragraph><strong>Inputs:</strong><bullet_list bullet="*"><list_item><literal_strong>nsp</literal_strong>, <emphasis>Namespace</emphasis> – A separate namespace, <literal>nsp</literal>.</list_item><list_item><literal_strong>nsp2</literal_strong>, <emphasis>Namespace</emphasis></list_item><list_item><literal_strong>x</literal_strong>, <emphasis>Float</emphasis>, required – First input argument.</list_item><list_item><literal_strong>y</literal_strong>, <emphasis>Namespace</emphasis><details opened="False"><summary>Namespace Ports</summary><bullet_list bullet="*"><list_item><literal_strong>nested</literal_strong>, <emphasis>Namespace</emphasis> – A nested namespace.<details opened="False"><summary>Namespace Ports</summary><bullet_list bullet="*"><list_item><literal_strong>a</literal_strong>, <emphasis>Int</emphasis>, required – An input in the nested namespace.</list_item></bullet_list></details></list_item><list_item><literal_strong>z</literal_strong>, <emphasis>Int</emphasis>, required – Input in a separate namespace.</list_item></bullet_list></details></list_item></bullet_list></paragraph>
                <paragraph><strong>Outputs:</strong><bullet_list bullet="*"><list_item><literal_strong>z</literal_strong>, <emphasis>Bool</emphasis>, required – Output of the demoworkchain.</list_item></bullet_list></paragraph>
                <paragraph><strong>Outline:</strong><literal_block force="False" language="default" linenos="False" xml:space="preserve">start
while(some_check)
    do_something
    if(another_check)
        do_something_else
finalize</literal_block></paragraph>
            </desc_content>
        </desc>
        <paragraph>The namespaces can be set to expand by default, using the <literal>:expand-namespaces:</literal> option.</paragraph>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature first="False" fullname="WorkChain"><desc_annotation xml:space="preserve">workchain</desc_annotation><desc_addname xml:space="preserve">demo_workchain.</desc_addname><desc_name xml:space="preserve">DemoWorkChain</desc_name></desc_signature>
            <desc_content>
                <paragraph>
                        A demo workchain to show how the workchain auto-documentation works.
                        </paragraph>
                <paragraph><strong>Inputs:</strong><bullet_list bullet="*"><list_item><literal_strong>metadata</literal_strong>, <emphasis>Namespace</emphasis><details opened="True"><summary>Namespace Ports</summary><bullet_list bullet="*"><list_item><literal_strong>call_link_label</literal_strong>, <emphasis>str</emphasis>, optional, <emphasis>non_db</emphasis> – The label to use for the <title_reference>CALL</title_reference> link if the process is called by another process.</list_item><list_item><literal_strong>description</literal_strong>, <emphasis>str</emphasis>, optional, <emphasis>non_db</emphasis> – Description to set on the process node.</list_item><list_item><literal_strong>label</literal_strong>, <emphasis>str</emphasis>, optional, <emphasis>non_db</emphasis> – Label to set on the process node.</list_item><list_item><literal_strong>store_provenance</literal_strong>, <emphasis>bool</emphasis>, optional, <emphasis>non_db</emphasis> – If set to <title_reference>False</title_reference> provenance will not be stored in the database.</list_item></bullet_list></details></list_item><list_item><literal_strong>nsp</literal_strong>, <emphasis>Namespace</emphasis> – A separate namespace, <literal>nsp</literal>.</list_item><list_item><literal_strong>nsp2</literal_strong>, <emphasis>Namespace</emphasis></list_item><list_item><literal_strong>x</literal_strong>, <emphasis>Float</emphasis>, required – First input argument.</list_item><list_item><literal_strong>y</literal_strong>, <emphasis>Namespace</emphasis><details opened="True"><summary>Namespace Ports</summary><bullet_list bullet="*"><list_item><literal_strong>nested</literal_strong>, <emphasis>Namespace</emphasis> – A nested namespace.<details opened="True"><summary>Namespace Ports</summary><bullet_list bullet="*"><list_item><literal_strong>a</literal_strong>, <emphasis>Int</emphasis>, required – An input in the nested namespace.</list_item></bullet_list></details></list_item><list_item><literal_strong>z</literal_strong>, <emphasis>Int</emphasis>, required – Input in a separate namespace.</list_item></bullet_list></details></list_item></bullet_list></paragraph>
                <paragraph><strong>Outputs:</strong><bullet_list bullet="*"><list_item><literal_strong>z</literal_strong>, <emphasis>Bool</emphasis>, required – Output of the demoworkchain.</list_item></bullet_list></paragraph>
                <paragraph><strong>Outline:</strong><literal_block force="False" language="default" linenos="False" xml:space="preserve">start
while(some_check)
    do_something
    if(another_check)
        do_something_else
finalize</literal_block></paragraph>
            </desc_content>
        </desc>
        <paragraph>The command is also hooked into <literal>sphinx.ext.autodoc</literal>, so AiiDA processes will be properly documented using <literal>.. automodule::</literal> as well.</paragraph>
        <target ids="module-demo_workchain" ismod="True"></target>
        <index entries="['single',\ 'demo_workchain\ (module)',\ 'module-demo_workchain',\ '',\ None]"></index>
        <paragraph>This module defines an example workchain for the aiida-workchain documentation directive.</paragraph>
        <index entries="['single',\ 'DemoWorkChain\ (class\ in\ demo_workchain)',\ 'demo_workchain.DemoWorkChain',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="DemoWorkChain" ids="demo_workchain.DemoWorkChain" module="demo_workchain" names="demo_workchain.DemoWorkChain"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">demo_workchain.</desc_addname><desc_name xml:space="preserve">DemoWorkChain</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">inputs=None</desc_parameter><desc_parameter xml:space="preserve">logger=None</desc_parameter><desc_parameter xml:space="preserve">runner=None</desc_parameter><desc_parameter xml:space="preserve">enable_persistence=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>A demo workchain to show how the workchain auto-documentation works.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NormalClass\ (class\ in\ demo_workchain)',\ 'demo_workchain.NormalClass',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="NormalClass" ids="demo_workchain.NormalClass" module="demo_workchain" names="demo_workchain.NormalClass"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">demo_workchain.</desc_addname><desc_name xml:space="preserve">NormalClass</desc_name></desc_signature>
            <desc_content>
                <paragraph>This is here to check that we didn’t break the regular autoclass.</paragraph>
            </desc_content>
        </desc>
    </section>
</document>
