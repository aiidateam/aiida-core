name: ci-code

on:
  push:
    branches-ignore: [gh-pages]
  pull_request:
    branches-ignore: [gh-pages]
    paths-ignore: [docs/**]

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
    # only cancel in-progress jobs or runs for the current workflow - matches against branch & tags
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 1

jobs:

  check-requirements:

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install utils/ dependencies
      run: pip install -r utils/requirements.txt

    - name: Check requirements files
      id: check_reqs
      run: python ./utils/dependency_management.py check-requirements DEFAULT

    - name: Create commit comment
      if: failure() && steps.check_reqs.outputs.error
      uses: peter-evans/commit-comment@v3
      with:
        path: pyproject.toml
        body: |
          ${{ steps.check_reqs.outputs.error }}

          Click [here](https://github.com/aiidateam/aiida-core/wiki/AiiDA-Dependency-Management) for more information on dependency management.

  tests:

    needs: [check-requirements]

    runs-on: ubuntu-latest
    timeout-minutes: 45

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.12']

    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_DB: test_aiida
          POSTGRES_PASSWORD: ''
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432
      rabbitmq:
        image: rabbitmq:3.8.14-management
        ports:
        - 5672:5672
        - 15672:15672
      slurm:
        image: xenonmiddleware/slurm:17
        ports:
        - 5001:22

    steps:
    - uses: actions/checkout@v4

    - name: Install system dependencies
      run: sudo apt update && sudo apt install postgresql graphviz

    - name: Install aiida-core
      uses: ./.github/actions/install-aiida-core
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup environment
      run: .github/workflows/setup.sh

    - name: Run test suite
      env:
        AIIDA_TEST_PROFILE: test_aiida
        AIIDA_WARN_v3: 1
      # Python 3.12 has a performance regression when running with code coverage
      # so run code coverage only for python 3.9.
      run: pytest -v tests -m 'not nightly' ${{ matrix.python-version == '3.9' && '--cov aiida' || '' }}

    - name: Upload coverage report
      if: matrix.python-version == 3.9 && github.repository == 'aiidateam/aiida-core'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        name: aiida-pytests-py3.9
        file: ./coverage.xml
        fail_ci_if_error: false  # don't fail job, if coverage upload fails


  tests-presto:

    needs: [check-requirements]
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - uses: actions/checkout@v4

    - name: Install graphviz
      run: sudo apt update && sudo apt install graphviz

    - name: Install aiida-core
      uses: ./.github/actions/install-aiida-core
      with:
        python-version: '3.11'

    - name: Setup SSH on localhost
      run: .github/workflows/setup_ssh.sh

    - name: Run test suite
      env:
        AIIDA_WARN_v3: 0
      run: pytest -m 'presto'


  verdi:

    needs: [check-requirements]
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4

    - name: Install aiida-core
      uses: ./.github/actions/install-aiida-core
      with:
        python-version: '3.12'
        from-requirements: 'false'

    - name: Run verdi tests
      run: |
        verdi devel check-load-time
        verdi devel check-undesired-imports
        .github/workflows/verdi.sh
