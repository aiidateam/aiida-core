============
AiiDA Graphs
============

AiiDA offers tools for exporting selected parts of an AiiDA graph to a file for backup or sharing purposes.

Export
++++++

Use ``verdi export create`` to export a selection of nodes, codes, groups, users, and/or computers.

See ``verdi export create -h`` for a full list of available options.

* **Selection:** Nodes can be selected via identifier (PK, UUID, label).
  It is often convenient to first put the nodes you would like to export into a :py:class:`~aiida.orm.Group` and then to export the group using ``verdi export create -G <group-name>``.
* **Augmentation:** By default, the export function automatically augments your selection of nodes by their provenance (and calculations by their direct outputs).
  You can customize this behavior using command line options.
  For details on how the provenance graph is traversed, see the section on :ref:`data consistency<topics:provenance:consistency>`.
* **File content:** The export file contains all information pertaining to the exported nodes: both the information stored in the database and files stored in the AiiDA repository.
* **Compression:** By default, the export file is a compressed ``zip`` archive.
  Use the command line options to disable compression or to switch to a different format (gzipped tar ball or uncompressed zip).


Import
++++++

Use ``verdi import`` to import AiiDA export archives generated by ``verdi export create``, either passing local paths and/or URLs.

See ``verdi import -h`` for a full list of available options.

* **Duplication:** AiiDA will avoid identifier collisions and node duplication based on UUIDs or email comparisons.
* **Merging:** By default, all existing entities will be updated with the most recent changes.
  Node extras and comments have special modes for determining how to import them.


Export Archive Migration
++++++++++++++++++++++++

Old AiiDA archives may be migrated to the newest version using ``verdi export migrate``, in order to make them importable into the newest AiiDA version.

New export versions are introduced for several different reasons.
This may generally be when
* a change occurs in what can or cannot be exported for each entity,
* the schemes in ``metadata.json`` are updated or changed,
* or standardized exported property values (like the one for ``node_type`` or similar) are updated in AiiDA.

As a default, ``verdi import`` will call ``verdi export migrate`` if an old archive is supplied.

.. note::

    It is not possible to "downgrade" an archive to previous export versions.
    However, since the migration will produce a new file, you will have your archive in at least two different export versions.

.. note::

    For archives of version 0.3 and older (run either ``verdi export inspect -v <ARCHIVE>`` or inspect your ``metadata.json`` file directly to check the version), it is advisable that you manually try to convince yourself that the migration was completely successful.
    While all migrations are tested, trying to include reasonable edge-cases, the migrations involed in going from version 0.3 to 0.4 are intricate and it is virtually impossible to account for all edge-cases that may occur.
    It is worth noting that if you ever have an issue, please report it on `GitHub <https://www.github.com/aiidateam/aiida_core/issues/new>`_, join the `AiiDA mailing list <http://www.aiida.net/mailing-list/>`_, or use the `contact form <http://www.aiida.net/contact-new/>`_.


Inspect Export Archives
+++++++++++++++++++++++

You can inspect an export archive by using ``verdi export inspect``.

This is useful to get a quick overview of the amount of different entities contained in the archive.
Furthermore, using the ``-v`` flag, you can quickly inspect the archive's export version.

Note that for archives with export versions prior to 0.3 (0.3 not included), the quick entities overview is not accurate.
Future updates to AiiDA and the export/import schemes may change the validity of other export versions.
