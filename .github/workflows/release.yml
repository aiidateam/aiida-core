name: release

# Automate deployment to PyPI when creating a release tag vX.Y.Z
# will only be published to PyPI if the git tag matches the release version
# and the pre-commit and tests pass

on:
  push:
    tags:
    - v[0-9]+.[0-9]+.[0-9]+*

env:
  FORCE_COLOR: 1

jobs:

  check-release-tag:

    # Only run this job on the main repository and not on forks
    if: github.repository == 'aiidateam/aiida-core'
    runs-on: ubuntu-24.04

    steps:

    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - run: python .github/workflows/check_release_tag.py $GITHUB_REF

  pre-commit:

    needs: [check-release-tag]
    runs-on: ubuntu-24.04
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4

    - name: Install aiida-core and pre-commit
      uses: ./.github/actions/install-aiida-core
      with:
        python-version: '3.11'
        extras: '[pre-commit]'
        from-lock: 'false'

    - name: Run pre-commit
      run: pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

  tests:

    needs: [check-release-tag]
    runs-on: ubuntu-24.04
    timeout-minutes: 30

    services:
      rabbitmq:
        image: rabbitmq:3.8.14-management
        ports:
        - 5672:5672
        - 15672:15672

    steps:
    - uses: actions/checkout@v4

    - name: Install aiida-core
      uses: ./.github/actions/install-aiida-core

    - name: Run sub-set of test suite
      run: pytest -s -m requires_rmq --db-backend=sqlite tests/

  publish:

    name: Publish to PyPI

    needs: [check-release-tag, pre-commit, tests]

    runs-on: ubuntu-24.04

    steps:
    - name: Check access to GitHub secrets
      run: echo "Pull request that trigger this workflow need to be on upstream repo to access GitHub secrets."; exit 1
      # if a pull request is merged from a fork
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.owner.login != 'aiidateam'

    - name: Checkout source
      uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - name: install flit
      run: |
        pip install flit~=3.4
    - name: Build and publish
      run: |
        flit publish
      env:
        FLIT_USERNAME: __token__
        FLIT_PASSWORD: ${{ secrets.PYPI_KEY }}
