name: Publish images to DockerHub

env:
  OWNER: ${{ github.repository_owner }}

on:
  workflow_call:
    inputs:
      runsOn:
        description: GitHub Actions Runner image
        required: true
        type: string
      images:
        description: Images built in build step
        required: true
        type: string

jobs:
  tag-push:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: true
      matrix:
        image: [aiida-core-base, aiida-core-with-services, aiida-core-dev]
    defaults:
      run:
        shell: bash
        working-directory: .docker
    permissions:
      packages: read

    steps:
    - name: Checkout Repo ⚡️
      uses: actions/checkout@v4

    - name: Login to GitHub Container Registry 🔑
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to DockerHub 🔑
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Read build variables
      id: build_vars
      run: |
        vars=$(cat build.json | jq -c '[.variable | to_entries[] | {"key": .key, "value": .value.default}] | from_entries')
        echo "vars=$vars"
        echo "vars=$vars" >> "${GITHUB_OUTPUT}"

    - name: Docker meta 📝
      id: meta
      uses: docker/metadata-action@v5
      env: ${{ fromJson(steps.build_vars.outputs.vars) }}
      with:
        images: |
          name=docker.io/${{ env.OWNER }}/${{ matrix.image }}
        tags: |
          type=edge,enable={{is_default_branch}}
          type=match,pattern=v(\d+\.\d+.\d+),group=1
          type=raw,value={{tag}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
          type=raw,value=python-${{ env.PYTHON_VERSION }},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
          type=raw,value=postgresql-${{ env.PGSQL_VERSION }},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

    - name: Determine src image tag
      id: images
      run: |
        src=$(echo '${{ inputs.images }}'| jq -cr '.[("${{ matrix.target }}"|ascii_upcase|sub("-"; "_"; "g")) + "_IMAGE"]')
        echo "src=$src"
        echo "src=$src" >> "${GITHUB_OUTPUT}"

    - name: Push image to docker.io
      uses: akhilerm/tag-push-action@v2.2.0
      if: false # TODO: Enable this!
      with:
        src: ${{ steps.images.outputs.src }}
        dst: ${{ steps.meta.outputs.tags }}
