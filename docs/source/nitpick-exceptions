### python builtins

# note: there doesn't seem to be a standard way of indicating a callable in python3
# https://stackoverflow.com/questions/23571253/how-to-define-a-callable-parameter-in-a-python-docstring
py:class callable

# For some reason, "filter" does not seem to be found
py:class filter

py:class unittest.case.TestCase
py:class unittest.runner.TextTestRunner

# required for metaclasses(?)
py:class builtins.bool
py:class builtins.float
py:class builtins.int
py:class builtins.object
py:class builtins.str
py:class builtins.dict

### AiiDA

# not quite clear why necessary...
py:class WorkChainSpec

### python packages
# Note: These exceptions are needed if
# * the objects are referenced e.g. as param/return types types in method docstrings (without intersphinx mapping)
# * the documentation linked via intersphinx lists the objects at a different (usually lower) import hierarchy
py:class click.core.Group
py:class click.core.Option
py:class click.types.ParamType
py:class click.types.Choice
py:class click.types.IntParamType
py:class click.types.StringParamType
py:class click.types.Path
py:meth  click.Option.get_default

py:class concurrent.futures._base.TimeoutError

py:class docutils.parsers.rst.Directive

py:class frozenset

py:class paramiko.proxy.ProxyCommand

# These can be removed once they are properly included in the `__all__` in `plumpy`
py:class plumpy.ports.PortNamespace
py:class plumpy.utils.AttributesDict

py:class topika.Connection

py:class tornado.ioloop.IOLoop
py:class tornado.concurrent.Future

py:class IPython.core.magic.Magics

py:class HTMLParser.HTMLParser
py:class html.parser.HTMLParser

py:class django.contrib.auth.base_user.AbstractBaseUser
py:class django.contrib.auth.base_user.BaseUserManager
py:class django.contrib.auth.models.AbstractBaseUser
py:class django.contrib.auth.models.BaseUserManager
py:class django.contrib.auth.models.PermissionsMixin
py:class django.core.exceptions.MultipleObjectsReturned
py:class django.core.exceptions.ObjectDoesNotExist
py:class django.db.models.base.Model
py:class django.db.models.manager.Manager
py:class django.db.models.query.QuerySet
py:class django.db.migrations.migration.Migration

py:class flask.app.Flask

py:class sqlalchemy.ext.declarative.api.Base
py:class sqlalchemy.ext.declarative.api.Model
py:class sqlalchemy.sql.functions.FunctionElement
py:class sqlalchemy.orm.query.Query
py:class sqlalchemy.orm.util.AliasedClass
py:class sqlalchemy.orm.session.Session
py:exc sqlalchemy.orm.exc.MultipleResultsFound

py:class sphinx.ext.autodoc.ClassDocumenter

py:class yaml.Dumper
py:class yaml.Loader
py:class yaml.dumper.Dumper
py:class yaml.loader.Loader
py:class yaml.FullLoader
py:class yaml.loader.FullLoader
py:class uuid.UUID

py:class psycopg2.extensions.cursor

py:class aldjemy.orm.DbNode
py:class aldjemy.orm.DbLink
py:class aldjemy.orm.DbComputer
py:class aldjemy.orm.DbUser
py:class aldjemy.orm.DbGroup
py:class aldjemy.orm.DbAuthInfo
py:class aldjemy.orm.DbComment
py:class aldjemy.orm.DbLog
py:class aldjemy.orm.DbSetting

py:class alembic.config.Config

py:class pgsu.PGSU
py:meth  pgsu.PGSU.__init__
