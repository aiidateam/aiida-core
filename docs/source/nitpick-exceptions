### python builtins
py:class _io.BufferedReader
py:class _io.StringIO
py:class AliasedClass
py:class asyncio.events.AbstractEventLoop
py:class AbstractContextManager
py:obj typing.AbstractContextManager
py:class callable
py:class function
py:class traceback
py:class NoneType
py:class MappingType
py:class AbstractContextManager
py:class BinaryIO
py:class EntryPoint
py:class EntryPoints
py:class IO
py:class FilePath
py:class Path
py:class str | list[str]
py:class str | Path
py:class typing.AbstractContextManager
py:class typing_extensions.Literal
py:class TypeDecorator
py:class json.encoder.JSONEncoder
py:class EXPOSED_TYPE
py:class EVENT_CALLBACK_TYPE
py:class datetime
py:class types.LambdaType
py:meth tempfile.TemporaryDirectory

### AiiDA
py:class ReturnType
py:class SelfType
py:class CollectionType
py:class EntityType
py:class EntityClsType
py:class ProjectType
py:class BackendEntityType
py:class BackendNodeType
py:class TransactionType
py:class NodeType
py:class ModelType
py:class FilterType
py:class OrderByType
py:class Logger
py:class ModuleType
py:class ExternalType
py:class UserDefinedType
py:class LinkAnnotateType
py:obj ReturnType
py:obj SelfType
py:obj CollectionType
py:obj EntityType
py:obj BackendEntityType
py:obj BackendNodeType
py:obj TransactionType
py:obj NodeType
py:obj ModelType
py:class aiida.common.ReturnType
py:class aiida.common.SelfType
py:class aiida.common.lang.MethodType
py:class aiida.orm.entitites.CollectionType
py:class aiida.orm.entitites.EntityType
py:class aiida.orm.entitites.BackendEntityType
py:class aiida.orm.groups.SelfType
py:class aiida.orm.implementation.entitites.EntityType
py:class aiida.engine.processes.functions.FunctionType
py:class aiida.engine.processes.workchains.workchain.MethodType
py:class aiida.orm.entities.EntityType
py:class aiida.orm.entities.BackendEntityType
py:class aiida.orm.entities.CollectionType
py:class aiida.orm.implementation.nodes.BackendNodeType
py:class aiida.orm.implementation.storage_backend.TransactionType
py:class aiida.orm.implementation.entities.EntityType
py:class aiida.orm.nodes.data.enum.EnumType
py:class aiida.orm.nodes.NodeType
py:class aiida.storage.psql_dos.orm.ModelType
py:class aiida.storage.psql_dos.orm.SelfType
py:class aiida.storage.psql_dos.orm.entities.SelfType
py:class aiida.tools.archive.SelfType
py:class aiida.tools.archive.EntityType
py:class aiida.tools.archive.abstract.EntityType
py:class aiida.tools.archive.abstract.SelfType
py:class aiida.common.lang.SelfType
py:class aiida.common.lang.ReturnType
py:obj aiida.common.ReturnType
py:obj aiida.common.SelfType
py:obj aiida.common.lang.ReturnType
py:obj aiida.orm.entitites.CollectionType
py:obj aiida.orm.entitites.EntityType
py:obj aiida.orm.entitites.BackendEntityType
py:obj aiida.orm.groups.SelfType
py:obj aiida.orm.entities.CollectionType
py:obj aiida.orm.entities.BackendEntityType
py:obj aiida.orm.entities.EntityType
py:obj aiida.orm.implementation.entities.EntityType
py:obj aiida.orm.implementation.nodes.BackendNodeType
py:obj aiida.orm.implementation.storage_backend.TransactionType
py:obj aiida.orm.nodes.node.NodeType
py:obj aiida.orm.nodes.NodeType
py:obj aiida.storage.psql_dos.orm.ModelType
py:obj aiida.storage.psql_dos.orm.SelfType
py:obj aiida.storage.psql_dos.orm.entities.ModelType
py:obj aiida.storage.psql_dos.orm.entities.SelfType
py:class aiida.storage.psql_dos.backend.Configuration
py:class aiida.storage.sqlite_temp.backend.Configuration
py:class aiida.storage.sqlite_zip.backend.Configuration
py:obj aiida.tools.archive.SelfType
py:obj aiida.tools.archive.EntityType
py:func QueryBuilder._get_ormclass
py:class aiida.storage.sqlite_zip.models.DbGroupNode
py:class aiida.engine.processes.workchains.context.ToContext
py:func aiida.orm.implementation.BackendQueryBuilder

### Typing aliases
py:obj aiida.engine.processes.functions.P
py:obj aiida.engine.processes.functions.N
py:obj aiida.engine.processes.functions.R_co
py:class P
py:class N
py:class aiida.engine.processes.functions.N
py:class aiida.engine.processes.functions.R_co

### third-party packages
# Note: These exceptions are needed if
# * the objects are referenced e.g. as param/return types types in method docstrings (without intersphinx mapping)
# * the documentation linked via intersphinx lists the objects at a different (usually lower) import hierarchy

py:class archive_path.zip_path.ZipPath

py:class click.core.Group
py:class click.core.Option
py:class click.types.Choice
py:class click.types.Path
py:class click.types.File
py:class click.types.StringParamType
py:func click.shell_completion._start_of_option
py:meth click.Option.get_default
py:meth fail

py:class ComputedFieldInfo
py:class pydantic.fields.Field
py:class pydantic.main.BaseModel
py:class PluggableSchemaValidator

py:class requests.models.Response
py:class requests.Response

py:class concurrent.futures._base.TimeoutError
py:class concurrent.futures._base.Future

py:class disk_objectstore.utils.LazyOpener
py:class disk_objectstore.backup_utils.BackupManager

py:class frozenset

py:class numpy.bool_
py:class numpy.ndarray
py:class ndarray

py:class paramiko.proxy.ProxyCommand

py:class pydantic.main.BaseModel
py:class ModelPrivateAttr
py:class CoreSchema
py:class _decorators.DecoratorInfos
py:class _generics.PydanticGenericMetadata
py:class SchemaSerializer
py:class SchemaValidator
py:class Signature
py:class ConfigDict
py:class FieldInfo

# These can be removed once they are properly included in the `__all__` in `plumpy`
py:class plumpy.ports.PortNamespace
py:class plumpy.utils.AttributesDict
py:class plumpy.utils.AttributesFrozendict
py:class plumpy.process_states.State
py:class plumpy.workchains._If
py:class plumpy.workchains._While
py:class plumpy.processes.ProcessStateMachineMeta
py:class PersistenceError
py:class State
py:class Stepper
py:class utils.AttributesFrozendict

py:class kiwipy.communications.Communicator
py:class RemoteProcessThreadController
py:class RmqThreadCommunicator

py:class _asyncio.Future

py:class tqdm.std.tqdm

py:class _pytest.tmpdir.TempPathFactory
py:class pytest.tmpdir.TempPathFactory
py:class pytest.TempPathFactory
py:class PGTest
py:class pgtest.pgtest.PGTest

py:class IPython.core.magic.Magics

py:class HTMLParser.HTMLParser
py:class html.parser.HTMLParser

py:class disk_objectstore.container.Container

py:class flask_restful.Api
py:class flask_restful.Resource
py:class flask.app.Flask
py:class Flask

py:class scoped_session
py:class sqlalchemy.orm.decl_api.SqliteModel
py:class sqlalchemy.orm.decl_api.Base
py:class sqlalchemy.sql.compiler.TypeCompiler
py:class sqlalchemy.sql.elements.BooleanClauseList
py:meth sqlalchemy.orm.unitofwork.UOWTransaction.register_object

py:class sphinx.ext.autodoc.ClassDocumenter
py:class sphinx.util.docutils.SphinxDirective
py:class ModuleAnalyzer
py:class BuildEnvironment

py:meth tabulate.tabulate

py:class yaml.Dumper
py:class yaml.Loader
py:class yaml.dumper.Dumper
py:class yaml.loader.Loader
py:class yaml.UnsafeLoader
py:class yaml.loader.UnsafeLoader
py:class yaml.nodes.Node
py:class yaml.nodes.MappingNode
py:class yaml.nodes.ScalarNode
py:class uuid.UUID

py:class alembic.config.Config
py:class alembic.op
py:class alembic.runtime.migration.MigrationContext
py:class alembic.script.base.ScriptDirectory

py:class CircusClient

py:class pgsu.PGSU
py:meth  pgsu.PGSU.__init__

py:class Session
py:class Query
py:class importlib_metadata.EntryPoint
py:class importlib_metadata.EntryPoints
py:class Command

py:class BooleanClauseList
py:class SQLCompiler
py:class sqlalchemy.orm.decl_api.Model
py:class sqlalchemy.sql.elements.ColumnElement

py:class packaging.version.Version
py:exc seekpath.hpkot.EdgeCaseWarning

py:class graphviz.graphs.Digraph
py:class Digraph
